# Agora RTC Egress Environment Configuration
# Copy this file to .env and fill in your actual values
#
# CONFIGURATION PRIORITY (highest to lowest):
# 1. Environment variables (this file when sourced or docker env)
# 2. Docker-compose environment section
# 3. egress_config.yaml file (fallback defaults)
#
# MODES:
# - Standalone mode: Uses all config from env vars + config file
# - Managed mode: AGORA_APP_ID from config layers, AGORA_ACCESS_TOKEN/AGORA_CHANNEL_NAME from requests

# =====================
# REQUIRED CONFIGURATION
# =====================

# Agora App ID (REQUIRED - can be set here or in egress_config.yaml)
AGORA_APP_ID=YOUR_AGORA_APP_ID

# Access Token and Channel Name (OPTIONAL for managed mode)
# For standalone mode: Set these values
# For managed mode: These come dynamically from HTTP requests
AGORA_ACCESS_TOKEN=YOUR_AGORA_CHANNEL_TOKEN
AGORA_CHANNEL_NAME=egress_test
EGRESS_UID=42

# =====================
# REDIS CONFIGURATION
# =====================
# Redis connection settings (overrides egress_config.yaml if set)
REDIS_ADDR=localhost:6379
REDIS_HOST=
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# =====================
# SERVER CONFIGURATION
# =====================
# Server region for regional task distribution (optional)
SERVER_REGION=
# Number of worker processes
SERVER_WORKERS=4

# =====================
# AWS S3 CONFIGURATION (Optional)
# =====================
S3_BUCKET=
S3_REGION=us-west-2
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

# =====================
# RECORDING CONFIGURATION
# =====================
RECORDING_ENABLED=false
RECORDING_FORMAT=mp4
VIDEO_WIDTH=1280
VIDEO_HEIGHT=720
VIDEO_FPS=30
VIDEO_BITRATE=2000000

# =====================
# LOGGING CONFIGURATION
# =====================
LOG_LEVEL=info

# =====================
# DEVELOPMENT OVERRIDES
# =====================
# Uncomment and modify for development
# GIN_MODE=debug
# API_PORT=8080
# HEALTH_PORT=8182
