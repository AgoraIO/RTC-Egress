# ServiceMonitor for Prometheus monitoring (if using Prometheus Operator)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: rtc-egress-monitoring
  namespace: rtc-egress
  labels:
    app: rtc-egress
spec:
  selector:
    matchLabels:
      component: native-recorder
  endpoints:
  - port: health
    path: /health
    interval: 30s
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: webhook-notifier-monitoring
  namespace: rtc-egress
  labels:
    app: webhook-notifier
spec:
  selector:
    matchLabels:
      component: notification
  endpoints:
  - port: health
    path: /health
    interval: 30s
---
# PodDisruptionBudgets to ensure availability during updates
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: egress-pdb
  namespace: rtc-egress
spec:
  minAvailable: 50%  # Keep at least 50% of egress pods running during updates
  selector:
    matchLabels:
      app: egress
      component: native-recorder
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: webhook-notifier-pdb
  namespace: rtc-egress
spec:
  minAvailable: 1    # Keep at least 1 webhook notifier running
  selector:
    matchLabels:
      app: webhook-notifier
      component: notification
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: web-dispatch-pdb
  namespace: rtc-egress
spec:
  minAvailable: 3    # Keep at least 3 web dispatch pods running (50% of 6)
  selector:
    matchLabels:
      app: web-dispatch
      component: web-dispatcher
---
# Network Policy for security (optional)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: rtc-egress-netpol
  namespace: rtc-egress
spec:
  podSelector: {}  # Apply to all pods in namespace
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow health checks from kube-system
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  # Allow internal communication within namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: rtc-egress
  # Allow ingress from monitoring namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
  egress:
  # Allow egress to Redis
  - to:
    - namespaceSelector:
        matchLabels:
          name: rtc-egress
    ports:
    - protocol: TCP
      port: 6379
  # Allow egress to web recorder
  - to:
    - namespaceSelector:
        matchLabels:
          name: rtc-egress
    ports:
    - protocol: TCP
      port: 3000
  # Allow egress to webhook endpoints (external)
  - to: []  # Allow all external egress for webhook calls
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
  # Allow DNS resolution
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53