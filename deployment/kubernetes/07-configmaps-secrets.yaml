# ConfigMap for Egress Service
apiVersion: v1
kind: ConfigMap
metadata:
  name: egress-config
  namespace: rtc-egress
data:
  egress_config.yaml: |
    app_id: "${APP_ID}"  # Will be replaced by environment variable
    health_port: 8182
    api_port: 8090
    template_port: 3000
    snapshots:
      output_dir: "/app/snapshots"
      layout: "flat"
    recording:
      output_dir: "/app/recordings"
      layout: "flat"
      format: "mp4"
      video:
        enabled: true
        codec: "h264"
      audio:
        enabled: true
        codec: "aac"
    redis:
      addr: "redis:6379"
      password: "${REDIS_PASSWORD}"
      db: 0
      task_ttl: 3600
      worker_patterns:
        - "egress:snapshot:*"
        - "egress:record:*"
    pod:
      region: "${POD_REGION}"
      workers: 4
---
# ConfigMap for Flexible Recorder Service
apiVersion: v1
kind: ConfigMap
metadata:
  name: flexible-recorder-config
  namespace: rtc-egress
data:
  flexible_recorder_config.yaml: |
    app_id: "${APP_ID}"
    server:
      health_port: 8183
    redis:
      addr: "redis:6379"
      password: "${REDIS_PASSWORD}"
      db: 0
      task_ttl: 3600
      worker_patterns:
        - "egress:web:snapshot:*"
        - "egress:web:record:*"
    pod:
      region: "${POD_REGION}"
      workers: 4
    web_recorder:
      base_url: "http://web-recorder:3000"
      timeout: 30
      auth_token: "${WEB_RECORDER_AUTH_TOKEN}"
      max_retries: 3
---
# ConfigMap for Webhook Notifier Service
apiVersion: v1
kind: ConfigMap
metadata:
  name: webhook-notifier-config
  namespace: rtc-egress
data:
  webhook_notifier_config.yaml: |
    app_id: "${APP_ID}"
    health_port: 8185
    redis:
      addr: "redis:6379"
      password: "${REDIS_PASSWORD}"
      db: 0
    pod:
      region: "${POD_REGION}"
    webhook:
      url: "${WEBHOOK_URL}"
      timeout: 30
      max_retries: 5
      base_retry_interval: 15
      max_retry_interval: 300
      auth_token: "${WEBHOOK_AUTH_TOKEN}"
      notify_states:
        - "PROCESSING"
        - "STOPPED"
        - "FAILED"
        - "TIMEOUT"
      include_payload: false
      batch_size: 0
      batch_timeout: 5
---
# Secrets (create these manually or via CI/CD)
apiVersion: v1
kind: Secret
metadata:
  name: agora-secrets
  namespace: rtc-egress
type: Opaque
data:
  # Base64 encoded values - replace with your actual values
  # echo -n "your_app_id" | base64
  app-id: eW91cl9hcHBfaWQ=  # "your_app_id" in base64
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secrets
  namespace: rtc-egress
type: Opaque
data:
  # Base64 encoded Redis password (if needed)
  # echo -n "your_redis_password" | base64
  password: ""  # Empty if no password
---
apiVersion: v1
kind: Secret
metadata:
  name: webhook-secrets
  namespace: rtc-egress
type: Opaque
data:
  # Base64 encoded webhook URL and auth token
  # echo -n "https://your-webhook-endpoint.com/notifications" | base64
  url: aHR0cHM6Ly95b3VyLXdlYmhvb2stZW5kcG9pbnQuY29tL25vdGlmaWNhdGlvbnM=
  # echo -n "your_webhook_token" | base64
  auth-token: eW91cl93ZWJob29rX3Rva2Vu  # "your_webhook_token" in base64
---
apiVersion: v1
kind: Secret
metadata:
  name: web-recorder-secrets
  namespace: rtc-egress
type: Opaque
data:
  # Base64 encoded web recorder auth token (if needed)
  # echo -n "your_web_recorder_token" | base64
  auth-token: eW91cl93ZWJfcmVjb3JkZXJfdG9rZW4=  # "your_web_recorder_token" in base64
