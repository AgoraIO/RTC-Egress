# Uploader - Debug Image (Full build environment with source code and symbols)
FROM golang:1.21-alpine AS builder

WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY cmd/uploader/ ./cmd/uploader/
COPY pkg/ ./pkg/

# Build the uploader service binary with debug symbols
RUN CGO_ENABLED=0 GOOS=linux go build -gcflags="all=-N -l" -o uploader ./cmd/uploader

FROM ubuntu:24.04

# Set timezone and avoid interactive prompts
ENV TZ=UTC
ENV DEBIAN_FRONTEND=noninteractive

# Install runtime and debug dependencies
RUN sed -i 's|http://archive.ubuntu.com|https://archive.ubuntu.com|g' /etc/apt/sources.list && \
    apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    gdb \
    strace \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /opt

# Copy Go binary with debug symbols
COPY --from=builder /app/uploader ./bin/
RUN chmod +x ./bin/uploader && chmod 755 /opt /opt/bin || true

# Copy source code and config for debugging
COPY --from=builder /app/cmd/ ./cmd/
COPY --from=builder /app/pkg/ ./pkg/
COPY config/ ./config/

# Create directory structure
RUN mkdir -p /opt/rtc_egress/config /opt/logs /recordings /snapshots /web_recorder

# Create non-root user
RUN groupadd -r rtc_egress && \
    useradd -r -g rtc_egress -s /bin/bash rtc_egress && \
    chown -R rtc_egress:rtc_egress /opt /recordings /snapshots /web_recorder

USER rtc_egress

# Expose health port (dynamic from config)
EXPOSE 8194

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8194/health || exit 1

# Default config directory for containers
ENV CONFIG_DIR=/opt/rtc_egress/config

# Default command
CMD ["/opt/bin/uploader"]
